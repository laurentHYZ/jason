#+TITLE: Test
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js@4.0.0

#+REVEAL_PLUGINS: ( chalkboard menu )

#+REVEAL_ADD_PLUGIN: chalkboard RevealChalkboard plugin/chalkboard/plugin.js
#+REVEAL_EXTRA_CSS: ./mystyle.css
#+ATTR_ORG: :width 200/250/300/400/500/600
#+ATTR_LATEX: :width 2.0in
#+ATTR_HTML: :width 200/250/300/400/500/600px
#+REVEAL_TITLE_SLIDE: <h2>%t</h2><h3>%s</h3><p>%A %a</p><p><a href="%u">%u</a></p>
#+REVEAL_THEME: moon
# ./assets/stars.jpg
#+REVEAL_TITLE_SLIDE_BACKGROUND: https://images.freeimages.com/images/large-previews/f0d/night-sky-1401615.jpg
#+Subtitle: Sliding presentation
#+Author: laurent
#+Email: laurent_pinson@hotmail.com
#+REVEAL_TALK_URL: https://laurenthyz.github.io/jason/blue.html
## * Lesson 1 one
Welcome to Python 101, and congratulations on learning coding that early in life!
#+BEGIN_EXPORT html
<iframe src="https://giphy.com/embed/11ISwbgCxEzMyY" width="480" height="360" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
#+END_EXPORT
## * adding level 1 title
** Python and other foreign languages:...
    #+BEGIN_EXPORT html
<div style="width:100%;height:0;padding-bottom:42%;position:relative;"><iframe src="https://giphy.com/embed/uNE1fngZuYhIQ" width="100%" height="100%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div>

#+END_EXPORT


***  Full stops “.” and “。”
In English and spanish a normal sentence ends with a full stop “.”,  while in Chinese and Japanese we use “。”
#+BEGIN_QUOTE
- 👦 💘 🍔 .
- He likes burger.
- 他喜欢汉堡包。

#+END_QUOTE


*** Question mark “?”
In English, Chinese and Japanese we use “?” in order to indicate a question:

#+BEGIN_QUOTE
- 👦 💘 🍔 ?
- He likes burger?
- 他喜欢汉堡包吗？

#+END_QUOTE


Well in Spanish we use 2 “?” to indicate a question:
#+BEGIN_QUOTE
- ¿ 👦 💘 🍔 ?
#+END_QUOTE


*** Simple sentence pattern: Subject+Verb+Complement
In English, Chinese and Spanish follow a simple Subject+Verb+Object pattern.
#+BEGIN_QUOTE
- 👦 💘 🍔 .
- He likes burger.
- 他喜欢汉堡包。
#+END_QUOTE

In Japanese the ordering is different, it is: complement + subject + verb ! How interesting!
#+BEGIN_QUOTE
- 日语：🍔 + 👦 + 💘.
#+END_QUOTE


** Differences between English and Python English:
Here we will see:
- how to express command/order in Python English (i.e. how to say: come! jump! etc)
- how to express attribution (i.e. "Matoom's sister", "Jasmine's father", "the color of the panda's ball")
Those 2 notions will help us understand how we can use Python objects, i.e. how we can access their attributes and how we can activate their expected behaviors (It is not a problem if what you just read does not make immediate sense right now).
*** Giving command: come(here) come here!
#+BEGIN_EXPORT html
<div style="width:100%;height:0;padding-bottom:56%;position:relative;"><iframe src="https://giphy.com/embed/l0HU9PRr9qZLZrjKU" width="100%" height="100%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
#+END_EXPORT


 #+REVEAL: split
In English we use the exclamation point to indicate we want something done/executed.
Python English is similar, but by convention Python uses parentheses/parens/括号 to indicate imperative (命令式）).
Look at the table below and see how complements are inserted between parens whenever complements are used.

| English          | Python English    |
|------------------+-------------------|
| come!            | come()            |
| run!             | run()             |
| eat your plate!  | eat(your__plate)  |
| eat your pastas! | eat(your__pastas) |
| say hi!          | say(hi)           |
| say "hi"!        | say("hi")         |


*** The panda's ball panda.ball
#+BEGIN_EXPORT html

<div style="width:100%;height:0;padding-bottom:56%;position:relative;"><iframe src="https://giphy.com/embed/39hoXKE2isn6nrwKos" width="100%" height="100%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div>
#+END_EXPORT

#+REVEAL: split
Look at the python sentence:
# #+BEGIN_SRC python
# panda.ball
# #+END_SRC
# We say that python uses "." notation (pronounce "dot notation") to indicate the relationship between the panda and the ball: there is a panda, and it has a ball that belongs to him.
# In English I can say that I know Matoom's mother, in python English I would say that I know matoom.mother .
# Please guess what the following item mean:
# #+BEGIN_SRC python
# car.color
# matoom.sister
# matoom.sister.name
# matoom.mother.age
# panda.ball.color
# #+END_SRC

 #+REVEAL: split
| English                    | Python English  |
|----------------------------+-----------------|
| panda's ball               | panda.ball      |
| jason's father             | jason.father    |
| matoom's bike              | matoom.bike     |
| the bike of matoom         | matoom.bike     |
| the bike of jason's father | matoom.dad.bike |
|                            |                 |

*** Homework
Please fill in the table below.
| ENGLISH              | PYTHON ENGLISH              |
| run!                 |                             |
|                      | jump()                      |
| walk slowly!         | walk(slowly)                |
| walk faster!         | walker(faster)              |
| come!                |                             |
|                      | write()                     |
|                      | write("hello")              |
| say "hi!"            |                             |
| say "thank you Dad!" |                             |
|                      | say("pleased to meet you.") |
| jasmine's bike       |                             |
| the bike of Jasmine  |                             |
| the dad of Matoom    |                             |
|                      | jason.mother                |
|                      | mike.age                    |
| the age of jason     |                             |
|                      | mike.age = 11               |
|                      | jason.mother.age            |
|                      | jason.mother.age = 30       |
|                      |                             |

** White-board 白板区

#+BEGIN_EXPORT html
<iframe width="100%" height="500px" src="https://awwapp.com/b/u9x6u2rqnwcv6/" allowfullscreen></iframe>
#+END_EXPORT


** Reading area
When we talk about coding we use specific terms (function, data types, boolean, integers etc...).
It is important that you pronounce those words properly (你的发音提高的话你的听力也会提高，而上课的时候听力至关重要), so visit this reading area as often as you can!
#+BEGIN_EXPORT html
<div class="iframe-container">
<iframe src="https://giphy.com/embed/2S4djnTiypJZK" frameBorder="0" class="giphy-embed" allowFullScreen></iframe>
</div>
#+END_EXPORT


 #+REVEAL: split
Coding with Python is just like learning english, pronunciation is crucially important!

#+BEGIN_EXPORT html

<!DOCTYPE html>
  <head>

    <script nonce="rjCTJjuEvbJBL74rVobCrA">
(function(e, p){
    var m = location.href.match(/platform=(win8|win|mac|linux|cros)/);
    e.id = (m && m[1]) ||
           (p.indexOf('Windows NT 6.2') > -1 ? 'win8' : p.indexOf('Windows') > -1 ? 'win' : p.indexOf('Mac') > -1 ? 'mac' : p.indexOf('CrOS') > -1 ? 'cros' : 'linux');
    e.className = e.className.replace(/\bno-js\b/,'js');
  })(document.documentElement, window.navigator.userAgent)
    </script>
    <meta charset="utf-8">
    <meta content="initial-scale=1, minimum-scale=1, width=device-width" name="viewport">
    <meta content=
    "Google Chrome is a browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier."
    name="description">
    <title>
      Chrome Browser
    </title>
    <link href="https://plus.google.com/100585555255542998765" rel="publisher">
    <link href="//www.google.com/images/icons/product/chrome-32.png" rel="icon" type="image/ico">
    <link href="//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&amp;subset=latin" rel=
    "stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
    <link href="/intl/en/chrome/assets/common/css/chrome.min.css" rel="stylesheet" nonce="rjCTJjuEvbJBL74rVobCrA">
    <script src="//www.google.com/js/gweb/analytics/autotrack.js" nonce="rjCTJjuEvbJBL74rVobCrA">
</script>
    <script nonce="rjCTJjuEvbJBL74rVobCrA">
new gweb.analytics.AutoTrack({
          profile: 'UA-26908291-1'
        });
    </script>
    <style>
#info {
    font-size: 20px;
    }
    #div_start {
    float: right;
    }
    #headline {
    text-decoration: none
    }
    #results {
    font-size: 20px;
    font-weight: bold;
    border: 1px solid #ddd;
    padding: 15px;
    text-align: left;
    min-height: 150px;
   text-transform: uppercase;
    }
    #start_button {
    border: 0;
    background-color:transparent;
    padding: 0;
    }
    .interim {
    color: gray;
    }
    .final {
    color: black;
    padding-right: 3px;
    }
    .button {
    display: none;
    }
    .marquee {
    margin: 20px auto;
    }

    #buttons {
    margin: 10px 0;
    position: relative;
    top: -50px;
    }

    #copy {
    margin-top: 20px;
    }

    #copy > div {
    display: none;
    margin: 0 70px;
    }
    </style>
    <style>
a.c1 {font-weight: normal;}
    </style>
  </head>
  <body class="" id="grid">
    <div class="browser-landing" id="main">
      <div class="compact marquee-stacked" id="marquee">
        <div class="marquee-copy">
        </div>
      </div>
      <div class="compact marquee">
        <div id="info">
          <p id="info_start">
            Click on the microphone icon and begin speaking for as long as you like.
          </p>
          <p id="info_speak_now" style="display:none">
            Go ahead, speak now.
          </p>
          <p id="info_no_speech" style="display:none">
            No speech was detected. You may need to adjust your <a href=
            "//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">microphone
            settings</a>.
          </p>
          <p id="info_no_microphone" style="display:none">
            No microphone was found. Ensure that a microphone is installed and that
            <a href="//support.google.com/chrome/bin/answer.py?hl=en&amp;answer=1407892">
            microphone settings</a> are configured correctly.
          </p>
          <p id="info_allow" style="display:none">
            Click the "Allow" button above to enable your microphone.
          </p>
          <p id="info_denied" style="display:none">
            Permission to use microphone was denied.
          </p>
          <p id="info_blocked" style="display:none">
            Permission to use microphone is blocked. To change, go to
            chrome://settings/contentExceptions#media-stream
          </p>
          <p id="info_upgrade" style="display:none">
            Web Speech API is not supported by this browser. Upgrade to <a href=
            "//www.google.com/chrome">Chrome</a> version 25 or later.
          </p>
        </div>
        <div id="div_start">
          <button id="start_button" onclick="startButton(event)"><img alt="Start" id="start_img"
          src="./assets/mic.gif"></button>
        </div>
        <div id="results">
          <span class="final" id="final_span"></span> <span class="interim" id=
          "interim_span"></span>
        </div>
        <div id="copy">
          <button class="button" id="copy_button" onclick="copyButton()">Copy and Paste</button>
          <div id="copy_info">
            <p>
              Press Control-C to copy text.
            </p>
            <p>
              (Command-C on Mac.)
            </p>
          </div><button class="button" id="email_button" onclick="emailButton()">Create
          Email</button>
          <div id="email_info">
            <p>
              Text sent to default email application.
            </p>
            <p>
              (See chrome://settings/handlers to change.)
            </p>
          </div>
        </div>
        <div class="compact marquee" id="div_language">
          <select id="select_language" onchange="updateCountry()">
            </select>&nbsp;&nbsp; <select id="select_dialect">
            </select>
        </div>
      </div>
    </div><script src="/intl/en/chrome/assets/common/js/chrome.min.js" nonce="rjCTJjuEvbJBL74rVobCrA">
</script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
var chrmMenuBar = new chrm.ui.MenuBar();
      chrmMenuBar.decorate('nav');
      var chrmLogo = new chrm.ui.Logo('logo');

      var chrmscroll = new chrm.ui.SmoothScroll('scroll');
      chrmscroll.init();



  window.___gcfg = { lang: 'en' };
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();




      var doubleTracker = new gweb.analytics.DoubleTrack('floodlight', {
          src: 2542116,
          type: 'clien612',
          cat: 'chrom0'
      });
      doubleTracker.track();
      doubleTracker.trackClass('doubletrack', true);
    </script> <script nonce="rjCTJjuEvbJBL74rVobCrA">
// If you modify this array, also update default language / dialect below.
var langs =
 [['English',       ['en-GB', 'United Kingdom'],
                     ['en-US', 'United States']],
 ['Français',        ['fr-FR']],
 ['中文',             ['cmn-Hans-CN', '普通话 (中国大陆)']]];

for (var i = 0; i < langs.length; i++) {
  select_language.options[i] = new Option(langs[i][0], i);
}
// Set default language / dialect.
select_language.selectedIndex = 0;
updateCountry();
select_dialect.selectedIndex = 1;
showInfo('info_start');

function updateCountry() {
  for (var i = select_dialect.options.length - 1; i >= 0; i--) {
    select_dialect.remove(i);
  }
  var list = langs[select_language.selectedIndex];
  for (var i = 1; i < list.length; i++) {
    select_dialect.options.add(new Option(list[i][1], list[i][0]));
  }
  select_dialect.style.visibility = list[1].length == 1 ? 'hidden' : 'visible';
}

var create_email = false;
var final_transcript = '';
var recognizing = false;
var ignore_onend;
var start_timestamp;
if (!('webkitSpeechRecognition' in window)) {
  upgrade();
} else {
  start_button.style.display = 'inline-block';
  var recognition = new webkitSpeechRecognition();
  recognition.continuous = true;
  recognition.interimResults = true;

  recognition.onstart = function() {
    recognizing = true;
    showInfo('info_speak_now');
    start_img.src = './assets/mic-animate.gif';
  };

  recognition.onerror = function(event) {
    if (event.error == 'no-speech') {
      start_img.src = './assets/mic.gif';
      showInfo('info_no_speech');
      ignore_onend = true;
    }
    if (event.error == 'audio-capture') {
      start_img.src = './assets/mic.gif';
      showInfo('info_no_microphone');
      ignore_onend = true;
    }
    if (event.error == 'not-allowed') {
      if (event.timeStamp - start_timestamp < 100) {
        showInfo('info_blocked');
      } else {
        showInfo('info_denied');
      }
      ignore_onend = true;
    }
  };

  recognition.onend = function() {
    recognizing = false;
    if (ignore_onend) {
      return;
    }
    start_img.src = '/assets/mic.gif';
    if (!final_transcript) {
      showInfo('info_start');
      return;
    }
    showInfo('');
    if (window.getSelection) {
      window.getSelection().removeAllRanges();
      var range = document.createRange();
      range.selectNode(document.getElementById('final_span'));
      window.getSelection().addRange(range);
    }
    if (create_email) {
      create_email = false;
      createEmail();
    }
  };

  recognition.onresult = function(event) {
    var interim_transcript = '';
    if (typeof(event.results) == 'undefined') {
      recognition.onend = null;
      recognition.stop();
      upgrade();
      return;
    }
    for (var i = event.resultIndex; i < event.results.length; ++i) {
      if (event.results[i].isFinal) {
        final_transcript += event.results[i][0].transcript;
      } else {
        interim_transcript += event.results[i][0].transcript;
      }
    }
    final_transcript = capitalize(final_transcript);
    final_span.innerHTML = linebreak(final_transcript);
    interim_span.innerHTML = linebreak(interim_transcript);
    if (final_transcript || interim_transcript) {
      showButtons('inline-block');
    }
  };
}

function upgrade() {
  start_button.style.visibility = 'hidden';
  showInfo('info_upgrade');
}

var two_line = /\n\n/g;
var one_line = /\n/g;
function linebreak(s) {
  return s.replace(two_line, '<p></p>').replace(one_line, '<br>');
}

var first_char = /\S/;
function capitalize(s) {
  return s.replace(first_char, function(m) { return m.toUpperCase(); });
}

function createEmail() {
  var n = final_transcript.indexOf('\n');
  if (n < 0 || n >= 80) {
    n = 40 + final_transcript.substring(40).indexOf(' ');
  }
  var subject = encodeURI(final_transcript.substring(0, n));
  var body = encodeURI(final_transcript.substring(n + 1));
  window.location.href = 'mailto:?subject=' + subject + '&body=' + body;
}

function copyButton() {
  if (recognizing) {
    recognizing = false;
    recognition.stop();
  }
  copy_button.style.display = 'none';
  copy_info.style.display = 'inline-block';
  showInfo('');
}

function emailButton() {
  if (recognizing) {
    create_email = true;
    recognizing = false;
    recognition.stop();
  } else {
    createEmail();
  }
  email_button.style.display = 'none';
  email_info.style.display = 'inline-block';
  showInfo('');
}

function startButton(event) {
  if (recognizing) {
    recognition.stop();
    return;
  }
  final_transcript = '';
  recognition.lang = select_dialect.value;
  recognition.start();
  ignore_onend = false;
  final_span.innerHTML = '';
  interim_span.innerHTML = '';
  start_img.src = './assets/mic-slash.gif';
  showInfo('info_allow');
  showButtons('none');
  start_timestamp = event.timeStamp;
}

function showInfo(s) {
  if (s) {
    for (var child = info.firstChild; child; child = child.nextSibling) {
      if (child.style) {
        child.style.display = child.id == s ? 'inline' : 'none';
      }
    }
    info.style.visibility = 'visible';
  } else {
    info.style.visibility = 'hidden';
  }
}

var current_style;
function showButtons(style) {
  if (style == current_style) {
    return;
  }
  current_style = style;
  copy_button.style.display = style;
  email_button.style.display = style;
  copy_info.style.display = 'none';
  email_info.style.display = 'none';
}
    </script>
  </body>


#+END_EXPORT

** Chit-chat 聊天区
You want to chat with Python? Do it here!
#+BEGIN_EXPORT html
<iframe src="https://trinket.io/embed/console/13c197b5a3" width="100%" height="200" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>
#+END_EXPORT

** Writing Letter
If you want to write letter to python here!
#+BEGIN_EXPORT html

<iframe src="https://trinket.io/embed/python3/5c78a83738" width="100%" height="356" frameborder="0" marginwidth="0" marginheight="0" allowfullscreen></iframe>

#+END_EXPORT

** test
#+BEGIN_EXPORT html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script type="text/javascript"
    src="https://cdn.jsdelivr.net/npm/brython@3.8.9/brython.min.js">
</script>
<script type="text/javascript"
src="https://cdn.jsdelivr.net/npm/brython@3.8.9/brython_stdlib.js">
</script>


    <title>Brython Demo</title>
</head>
<body onload="brython()">



    <div class="example" id="ex_mousemove" style="display: block;">
<ul>
        <li id="moving"> drag me
        </li><br>
         <li id="moving2" >drag me too
        </li><br>
        <li id="moving3"> drag me not</li>
</ul>

        <script type="text/python" id="script_mousemove">
        from browser import document

        class ElementMove:

            def __init__(self, moving):
                """Make "moving" element movable with the mouse"""
                self.moving = moving
                self.is_moving = False
                self.moving.bind("mousedown", self.start)
                self.moving.bind("mouseup", self.stop)
                moving.style.cursor = "move"
                moving.style.position = "absolute"

            def start(self, event):
                """When user clicks on the moving element, set boolean is_moving
                to True and store mouse and moving element positions"""
                self.is_moving = True
                self.mouse_pos = [event.x, event.y]
                self.elt_pos = [self.moving.left, self.moving.top]
                document.bind("mousemove", self.move)
                # prevent default behaviour to avoid selecting the moving element
                event.preventDefault()

            def move(self, event):
                """User moves the mouse"""
                if not self.is_moving:
                    return

                # set new moving element coordinates
                self.moving.left = self.elt_pos[0] + event.x - self.mouse_pos[0]
                self.moving.top = self.elt_pos[1] + event.y - self.mouse_pos[1]

            def stop(self, event):
                """When user releases the mouse button, stop moving the element"""
                self.is_moving = False
                document.unbind("mousemove")

        ElementMove(document["moving"])
        ElementMove(document["moving2"])
        ElementMove(document['moving3'])
        </script>
    </p></div>
<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script></body>
</html>

#+END_EXPORT
** test2
#+BEGIN_EXPORT html
<style>
#mydiv {
  position: absolute;
  z-index: 9;
  background-color: #f1f1f1;
  text-align: center;
  border: 1px solid #d3d3d3;
}

#mydivheader {
  padding: 10px;
  cursor: move;
  z-index: 10;
  background-color: #2196F3;
  color: #fff;
}
</style>
<body>

<div id="mydiv">

  <div id="mydivheader">Click here to move</div>
  <div id="mydivtest"> You can move that too</div>
</div>
<div id="mydiv1">

  <div id="mydiv1header">Click here to move</div>
  <div id="mydiv1test"> You can move that too</div>
</div>


<script>
//Make the DIV element draggagle:

dragElement(document.getElementById("mydiv"));

dragElement(document.getElementById("mydiv1"));

function dragElement(elmnt) {
  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
  if (document.getElementById(elmnt.id + "header")) {
    /* if present, the header is where you move the DIV from:*/
    document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
  } else {
    /* otherwise, move the DIV from anywhere inside the DIV:*/
    elmnt.onmousedown = dragMouseDown;
  }

  function dragMouseDown(e) {
    e = e || window.event;
    e.preventDefault();
    // get the mouse cursor position at startup:
    pos3 = e.clientX;
    pos4 = e.clientY;
    document.onmouseup = closeDragElement;
    // call a function whenever the cursor moves:
    document.onmousemove = elementDrag;
  }

  function elementDrag(e) {
    e = e || window.event;
    e.preventDefault();
    // calculate the new cursor position:
    pos1 = pos3 - e.clientX;
    pos2 = pos4 - e.clientY;
    pos3 = e.clientX;
    pos4 = e.clientY;
    // set the element's new position:
    elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
    elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
  }

  function closeDragElement() {
    /* stop moving when mouse button is released:*/
    document.onmouseup = null;
    document.onmousemove = null;
  }
}
</script>

#+END_EXPORT
#+BEGIN_EXPORT html
 <ul>
  <li>Adele</li>
  <li>Agnes<span class="close">x</span></li>

  <li>Billy<span class="close">x</span></li>
  <li>Bob<span class="close">x</span></li>

  <li>Calvin<span class="close">x</span></li>
  <li>Christina<span class="close">x</span></li>
  <li>Cindy</li>
</ul>
#+END_EXPORT
** map
#+BEGIN_EXPORT html


<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta name="description" content="Drag and drop demo written in Brython www.brython.info">
<meta name="keywords" content="Python,Brython">
<meta name="author" content="Pierre Quentel">
<meta http-equiv="Content-type" content="text/html;charset=utf-8">

<script type="text/javascript"
src="https://cdn.jsdelivr.net/npm/brython@3.8.9/brython.min.js">
</script>
<script type="text/javascript"
src="https://cdn.jsdelivr.net/npm/brython@3.8.9/brython_stdlib.js">
</script>
<style>
.rounded-corners {
    -moz-border-radius: 20px;
    -webkit-border-radius: 20px;
    -khtml-border-radius: 20px;
    border-radius: 20px;
    text-align:center;
    background-color:#440;
    color:#FFF;
    font-family:arial;
    font-weight:bold;
    font-size:12px;
}
</style>
</head>
<body onLoad="brython(1)">

<script type="text/python">
from browser import document, timer
from browser.html import AREA, DIV

countries = [area.alt for area in document.select("AREA")]

def mouse_over(ev):
    ev.target.style.cursor = "pointer"

def drag_start(ev):
    ev.data['text'] = ev.target.alt
    ev.data.effectAllowed = 'move'

def drag_over(ev):
    ev.data.dropEffect = 'move'
    ev.preventDefault()

def drop(ev):
    ev.preventDefault()
    src_alt = ev.data['text']
    elt = document[src_alt]
    if ev.target.alt == countries[int(src_alt)]:
        # dropped on the right country
        elt.style.left = ev.x - elt.clientWidth / 2
        elt.style.top = ev.y - elt.clientHeight / 2
        elt.draggable = False # don't drag any more
        elt.style.cursor = "auto"
    else:
        # back where we started
        go_back(elt,ev)


for i, area in enumerate(document.select("AREA")):
    # create a DIV for each AREA (ie each country)
    ctag = DIV(area.alt, draggable=True, id=i, Class="rounded-corners")
    left = 10 + 110 * (i // 15)
    _top = 100 + 30 * (i - 15 * (i // 15))
    ctag.style = {'position': 'absolute', 'left': left, 'top': _top,
        'width': 80, 'height': 16}
    ctag.bind('dragstart', drag_start)
    ctag.bind('mouseover', mouse_over)
    document <= ctag
    # drag and drop event handlers
    area.bind('dragover', drag_over)
    area.bind('drop', drop)

step = 0
_timer = None

def go_back(elt,mouse):
    # smoothly move the DIV to its original place
    global step, _timer
    x0, y0 = mouse.x - elt.clientWidth / 2, mouse.y - elt.clientHeight / 2
    x1, y1 = elt.left, elt.top # return integers (elt.style.left returns a string like "110px")
    step = 0
    dx, dy = (x1 - x0) / 100, (y1 - y0) / 100
    def move():
        global step
        elt.style.left = x0 + step * dx
        elt.style.top = y0 + step * dy
        step += 1
        if step > 100:
            timer.clear_interval(_timer)
    _timer = timer.set_interval(move, 10)


</script>

<div align="center"><img src="assets/europa.gif" border="0" usemap="#europa">
<map name="europa">
<map id="imgmap2020724105720" name="imgmap2020724105720"><area shape="poly" alt="France" title="" coords="108,307,117,298,133,302,133,291,148,298,150,296,166,284,213,319,211,330,192,353,201,351,208,379,203,386,190,390,162,383,155,396,153,394,115,370,132,352,119,328" href="" target="" /><area shape="poly" alt="England" title="" coords="148,169,161,186,144,206,152,206,161,258,169,250,105,279,123,241,137,232,130,215,125,199,137,180,146,176" href="" target="" /><!-- Created by Online Image Map Editor (http://www.maschek.hu/imagemap/index) --></map>
</map>
</div>
</html>


#+END_EXPORT
#+BEGIN_EXPORT html
<iframe src="http://127.0.0.1:5500/brython.html" width="480" height="360" frameBorder="0" allowFullScreen></iframe>
#+END_EXPORT
* adding a title here in rachel org file.
